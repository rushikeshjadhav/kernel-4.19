From d0b95ebf4516a8c69db9e82d54adee7c30102184 Mon Sep 17 00:00:00 2001
From: Yulei Zhang <yulei.zhang@intel.com>
Date: Fri, 11 May 2018 15:22:34 +0800
Subject: [PATCH 30/45] drm/i915/gvt: Rebase the code to gvt-staging for live
 migration

Signed-off-by: Yulei Zhang <yulei.zhang@intel.com>
---
 drivers/gpu/drm/i915/gvt/execlist.c |  2 +-
 drivers/gpu/drm/i915/gvt/gvt.h      |  3 +++
 drivers/gpu/drm/i915/gvt/migrate.c  | 26 ++++++++++++--------------
 drivers/gpu/drm/i915/gvt/migrate.h  |  2 ++
 4 files changed, 18 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/i915/gvt/execlist.c b/drivers/gpu/drm/i915/gvt/execlist.c
index 70494e3..992e226 100644
--- a/drivers/gpu/drm/i915/gvt/execlist.c
+++ b/drivers/gpu/drm/i915/gvt/execlist.c
@@ -437,7 +437,7 @@ static int complete_execlist_workload(struct intel_vgpu_workload *workload)
 	return ret;
 }
 
-static int submit_context(struct intel_vgpu *vgpu, int ring_id,
+int submit_context(struct intel_vgpu *vgpu, int ring_id,
 		struct execlist_ctx_descriptor_format *desc,
 		bool emulate_schedule_in)
 {
diff --git a/drivers/gpu/drm/i915/gvt/gvt.h b/drivers/gpu/drm/i915/gvt/gvt.h
index 3b4ec92..4970325 100644
--- a/drivers/gpu/drm/i915/gvt/gvt.h
+++ b/drivers/gpu/drm/i915/gvt/gvt.h
@@ -724,6 +724,9 @@ int intel_gvt_debugfs_add_vgpu(struct intel_vgpu *vgpu);
 void intel_gvt_debugfs_remove_vgpu(struct intel_vgpu *vgpu);
 int intel_gvt_debugfs_init(struct intel_gvt *gvt);
 void intel_gvt_debugfs_clean(struct intel_gvt *gvt);
+int submit_context(struct intel_vgpu *vgpu, int ring_id,
+		struct execlist_ctx_descriptor_format *desc,
+		bool emulate_schedule_in);
 
 
 #include "trace.h"
diff --git a/drivers/gpu/drm/i915/gvt/migrate.c b/drivers/gpu/drm/i915/gvt/migrate.c
index ef253da..ea728bc 100644
--- a/drivers/gpu/drm/i915/gvt/migrate.c
+++ b/drivers/gpu/drm/i915/gvt/migrate.c
@@ -428,7 +428,7 @@ static int ppgtt_save(const struct gvt_migration_obj_t *obj)
 			continue;
 
 		entry.page_table_level = mm->ppgtt_mm.root_entry_type;
-		memcpy(entry.pdp, mm->ppgtt_mm.shadow_pdps, 32);
+		memcpy(entry.pdp, mm->ppgtt_mm.guest_pdps, 32);
 
 		memcpy(des + sizeof(struct gvt_region_t) + (num * sz),
 			&entry, sz);
@@ -537,8 +537,11 @@ static int workload_save(const struct gvt_migration_obj_t *obj)
 		list_for_each_entry_safe(pos, n,
 			&vgpu->submission.workload_q_head[engine->id], list) {
 			workload.ring_id = pos->ring_id;
-			memcpy(&workload.elsp_dwords, &pos->elsp_dwords,
-				sizeof(struct intel_vgpu_elsp_dwords));
+			workload.ctx_desc = pos->ctx_desc;
+			workload.emulate_schedule_in = pos->emulate_schedule_in;
+			workload.elsp_dwords = pos->elsp_dwords;
+			list_del_init(&pos->list);
+			intel_vgpu_destroy_workload(pos);
 			memcpy(des + sizeof(struct gvt_region_t) + (num * sz),
 				&workload, sz);
 			num++;
@@ -555,14 +558,11 @@ static int workload_save(const struct gvt_migration_obj_t *obj)
 static int workload_load(const struct gvt_migration_obj_t *obj, u32 size)
 {
 	struct intel_vgpu *vgpu = (struct intel_vgpu *) obj->vgpu;
-	struct drm_i915_private *dev_priv = vgpu->gvt->dev_priv;
 	int n_transfer = INV;
 	struct gvt_pending_workload_t workload;
-	struct intel_engine_cs *engine;
 	void *src = obj->img + obj->offset;
-	u64 pa, off;
 	u32 sz = sizeof(struct gvt_pending_workload_t);
-	int i, j;
+	int i;
 
 	if (size == 0)
 		return size;
@@ -574,16 +574,14 @@ static int workload_load(const struct gvt_migration_obj_t *obj, u32 size)
 		size);
 		return n_transfer;
 	}
-
 	for (i = 0; i < size / sz; i++) {
 		memcpy(&workload, src + (i * sz), sz);
-		engine = dev_priv->engine[workload.ring_id];
-		off = i915_mmio_reg_offset(RING_ELSP(engine));
-		pa = intel_vgpu_mmio_offset_to_gpa(vgpu, off);
-		for (j = 0; j < 4; j++) {
-			intel_vgpu_emulate_mmio_write(vgpu, pa,
-					&workload.elsp_dwords.data[j], 4);
+		if (workload.emulate_schedule_in) {
+			vgpu->submission.execlist[workload.ring_id].elsp_dwords = workload.elsp_dwords;
+			vgpu->submission.execlist[workload.ring_id].elsp_dwords.index = 0;
 		}
+		submit_context(vgpu, workload.ring_id,
+			&workload.ctx_desc, workload.emulate_schedule_in);
 	}
 
 	n_transfer = size;
diff --git a/drivers/gpu/drm/i915/gvt/migrate.h b/drivers/gpu/drm/i915/gvt/migrate.h
index f7d28bc..ab247dc 100644
--- a/drivers/gpu/drm/i915/gvt/migrate.h
+++ b/drivers/gpu/drm/i915/gvt/migrate.h
@@ -52,6 +52,8 @@ struct gvt_ppgtt_entry_t {
 
 struct gvt_pending_workload_t {
 	int ring_id;
+	bool emulate_schedule_in;
+	struct execlist_ctx_descriptor_format ctx_desc;
 	struct intel_vgpu_elsp_dwords elsp_dwords;
 };
 
-- 
2.7.4

