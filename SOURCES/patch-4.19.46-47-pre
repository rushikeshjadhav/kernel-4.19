--- a/fs/gfs2/lops.c	2019-06-01 07:04:45.547000000 +0000
+++ b/fs/gfs2/lops.c	2019-06-01 07:05:23.052000000 +0000
@@ -664,7 +664,7 @@
 		gl = bd->bd_gl;
 		atomic_dec(&gl->gl_revokes);
 		clear_bit(GLF_LFLUSH, &gl->gl_flags);
-		gfs2_free_bufdata(bd);
+		kmem_cache_free(gfs2_bufdata_cachep, bd);
 	}
 }
 
--- a/fs/gfs2/glock.c	2019-06-01 07:09:40.370000000 +0000
+++ b/fs/gfs2/glock.c	2019-06-01 07:18:26.858000000 +0000
@@ -185,14 +185,13 @@
 {
 	spin_lock(&lru_lock);
 
-	list_del(&gl->gl_lru);
-	list_add_tail(&gl->gl_lru, &lru_list);
-
-	if (!test_bit(GLF_LRU, &gl->gl_flags)) {
-		set_bit(GLF_LRU, &gl->gl_flags);
+	if (!list_empty(&gl->gl_lru))
+		list_del_init(&gl->gl_lru);
+	else
 		atomic_inc(&lru_count);
-	}
 
+	list_add_tail(&gl->gl_lru, &lru_list);
+	set_bit(GLF_LRU, &gl->gl_flags);
 	spin_unlock(&lru_lock);
 }
 
--- a/fs/gfs2/glock.c	2019-06-06 09:55:54.955000000 +0000
+++ b/fs/gfs2/glock.c	2019-06-06 09:56:13.750000000 +0000
@@ -201,7 +201,7 @@
 		return;
 
 	spin_lock(&lru_lock);
-	if (test_bit(GLF_LRU, &gl->gl_flags)) {
+	if (!list_empty(&gl->gl_lru)) {
 		list_del_init(&gl->gl_lru);
 		atomic_dec(&lru_count);
 		clear_bit(GLF_LRU, &gl->gl_flags);
@@ -1458,7 +1458,6 @@
 		if (!spin_trylock(&gl->gl_lockref.lock)) {
 add_back_to_lru:
 			list_add(&gl->gl_lru, &lru_list);
-			set_bit(GLF_LRU, &gl->gl_flags);
 			atomic_inc(&lru_count);
 			continue;
 		}
@@ -1466,6 +1465,7 @@
 			spin_unlock(&gl->gl_lockref.lock);
 			goto add_back_to_lru;
 		}
+		clear_bit(GLF_LRU, &gl->gl_flags);
 		gl->gl_lockref.count++;
 		if (demote_ok(gl))
 			handle_callback(gl, LM_ST_UNLOCKED, 0, false);
@@ -1500,7 +1500,6 @@
 		if (!test_bit(GLF_LOCK, &gl->gl_flags)) {
 			list_move(&gl->gl_lru, &dispose);
 			atomic_dec(&lru_count);
-			clear_bit(GLF_LRU, &gl->gl_flags);
 			freed++;
 			continue;
 		}
